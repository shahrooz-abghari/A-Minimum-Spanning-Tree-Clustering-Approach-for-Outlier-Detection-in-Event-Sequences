{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    "import time\n",
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import networkx as nx\n",
    "import matplotlib.pyplot as plt\n",
    "from networkx import tree\n",
    "from datetime import datetime\n",
    "from prefixspan import PrefixSpan\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.cluster import AffinityPropagation\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.metrics import pairwise_distances\n",
    "from sklearn.metrics import silhouette_score, silhouette_samples\n",
    "from sklearn.metrics import euclidean_distances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "input_path = '/input/path'\n",
    "output_path = '/output/path'\n",
    "\n",
    "temp = pd.DataFrame()\n",
    "event_event_id = []\n",
    "\n",
    "smart_meters = pd.read_csv(input_path + 'Events.csv', delimiter=';')\n",
    "smart_meters = smart_meters.sort_values('EVENTTIMESTAMP')\n",
    "smart_meters['date'] = pd.to_datetime(smart_meters['EVENTTIMESTAMP']).dt.date\n",
    "smart_meters['date'] = pd.to_datetime(smart_meters['date'])\n",
    "\n",
    "# Splitting data based on date\n",
    "for date in smart_meters['date'].unique():\n",
    "    temp = smart_meters[smart_meters['date'] == date]\n",
    "    temp.to_csv(output_path + 'data_'+ str(date) +'.csv', index=False)\n",
    "\n",
    "#exctrating event IDs and event names\n",
    "smart_meters_1=smart_meters_[['EVENTID','EVENTDATA']]\n",
    "smart_meters_1.drop_duplicates(inplace=True)\n",
    "smart_meters_1.sort_values('EVENTID', inplace=True)\n",
    "smart_meters_1.to_csv(output_path + 'event_event_id.csv', index=False)\n",
    "\n",
    "# Preprocessing data\n",
    "source_output = os.listdir(output_path)\n",
    "\n",
    "for data in ['data_2017-05-', 'data_2017-06-', 'data_2017-07-', 'data_2017-08-']:\n",
    "    start_time = time.time()\n",
    "    output = pd.DataFrame()\n",
    "    for file in source_output:\n",
    "        if file.startswith(data) and file.endswith('.csv'):\n",
    "            print(file)\n",
    "            dataset = pd.read_csv(output_path + file)\n",
    "            dataset['EVENTID'] = dataset['EVENTID'].apply(lambda x:str(x))\n",
    "            temp = []\n",
    "\n",
    "            for name, group in dataset.groupby('DEVICEID'):\n",
    "                start_date_time = pd.to_datetime(group['EVENTTIMESTAMP'].values[0])\n",
    "                stop_date_time = pd.to_datetime(group['EVENTTIMESTAMP'].values[-1])\n",
    "\n",
    "                duration = (stop_date_time - start_date_time).total_seconds()\n",
    "\n",
    "                event_type_seq = ','.join(group['EVENTDATA'])\n",
    "                event_type_seq_id = ','.join(group['EVENTID'])\n",
    "\n",
    "                temp.append([start_date_time,        #0\n",
    "                             stop_date_time,         #1\n",
    "                             name,                   #2\n",
    "                             round(duration,3),      #3 \n",
    "                             event_type_seq,         #4\n",
    "                             event_type_seq_id,      #5\n",
    "                             start_date_time.date(), #6 \n",
    "                            ])\n",
    "\n",
    "            output = [output, pd.DataFrame(temp)] #\n",
    "            output = pd.concat(output, ignore_index=True)\n",
    "\n",
    "    output = pd.DataFrame({'date':output[6],'start_date_time':output[0],'stop_date_time':output[1], 'device_id':output[2],\\\n",
    "                           'device_uptime':output[3], 'event_type_seq':output[4], 'event_type_seq_id':output[5]}) \n",
    "    \n",
    "    print()\n",
    "    print('Number of device IDs: ', len(output.device_id.unique()))\n",
    "    print('Number of sequential dataset records: ', len(output))\n",
    "\n",
    "    x = 0\n",
    "    for row in output['event_type_seq']:\n",
    "        x = x + len(row.split(','))\n",
    "\n",
    "    print('Number of events: ', x)\n",
    "    stop_time = time.time()\n",
    "    print('Execution time: ' + repr(round((stop_time - start_time),0)) + ' sec')\n",
    "    output.to_csv(output_path + data[5:12] +'_.csv', index=False)\n",
    "    print()\n",
    "\n",
    "# sampling the dataset    \n",
    "source_output = os.listdir(output_path)\n",
    "device = []\n",
    "dataset = pd.DataFrame()\n",
    "sample_size = 30        # number of samples \n",
    "sample_date = '2017-05' # month of sampling\n",
    "\n",
    "for file in source_output:\n",
    "    if file.startswith(sample_date) and file.endswith('.csv'): \n",
    "        dataset = pd.read_csv(output_path + file, delimiter=',')\n",
    "        \n",
    "for name, group in dataset.groupby('device_id'):\n",
    "    if len(group['device_id']) > 30:\n",
    "        device.append(name)\n",
    "\n",
    "sample_devices = np.random.choice(device, sample_size,  replace=False)\n",
    "sample_dataset_may = dataset[dataset['device_id'].isin(sample_devices)]\n",
    "for name, group in sample_dataset_may.groupby('date'):\n",
    "    print(name, len(group))\n",
    "sample_dataset_may.to_csv(output_path + 'sample_dataset_' + name[:7] + '.csv' )\n",
    "\n",
    "# Extracting frequent sequential patterns using PrefixSpan\n",
    "# PrefixSpan is adpoted from Chuancong Gao' GitHub repository available at https://github.com/chuanconggao/PrefixSpan-py \n",
    "\n",
    "source_output = os.listdir(output_path)\n",
    "\n",
    "for file in source_output:\n",
    "    if file.startswith('sample_dataset_' + sample_date) and file.endswith('.csv'):\n",
    "        print(file)\n",
    "        dataset = pd.read_csv(output_path + file)\n",
    "        \n",
    "        for date, group_date in dataset.groupby('date'):\n",
    "            print(date)\n",
    "            selected_patterns = []\n",
    "            unmatched_patterns = []\n",
    "            all_patterns = pd.DataFrame()\n",
    "            start_time = time.time()\n",
    "            for device, group_device in group_date.groupby('device_id'):\n",
    "               \n",
    "                len_dataset = (len(group_device))\n",
    "                event_seq = pd.DataFrame(group_device,columns=['event_type_seq_id'])\n",
    "                \n",
    "                dataset_seq = []\n",
    "                for values in event_seq.values.tolist():\n",
    "                    for value in values:\n",
    "                        dataset_seq.append(value.split(','))\n",
    "                ps = []\n",
    "                ps = PrefixSpan(dataset_seq)\n",
    "                ps.minlen = 3\n",
    "                ps.maxlen = 7\n",
    "                prefix_results = ps.frequent(1)\n",
    "                prefix_results.sort()\n",
    "                prefix_results.sort(key=lambda tup: len(tup[1]), reverse=True)\n",
    "                prefix_results = pd.DataFrame(prefix_results,columns=['support','pattern'])\n",
    "                \n",
    "                mataced_patterns_count = 0\n",
    "                unmatched_patterns_count = 0\n",
    "                number_of_matches = 0\n",
    "\n",
    "                temp_dataset = group_device\n",
    "                temp_dataset['pattern'] = '-'\n",
    "\n",
    "                for row in prefix_results.pattern:\n",
    "                    pattern = ','.join(row)\n",
    "\n",
    "                    num_matches = len(group_device[group_device['event_type_seq_id'].str.contains(pattern)]) #\n",
    "\n",
    "                    if (pattern != ''):\n",
    "                        if (num_matches > 0): #\n",
    "                            temp_dataset['pattern'] = np.where(temp_dataset['event_type_seq_id'].str.contains(pattern)\n",
    "                                                               & ~temp_dataset['pattern'].str.contains(pattern), \n",
    "                                                               temp_dataset['pattern'].astype(str) + pattern + '-', \n",
    "                                                               temp_dataset['pattern']) #\n",
    "\n",
    "\n",
    "                            mataced_patterns_count += 1\n",
    "                            selected_patterns.append([device, date, pattern, len(pattern.split(',')), num_matches])\n",
    "                    elif (num_matches == 0): #\n",
    "                        unmatched_patterns.append([device, date, pattern, len(pattern.split(',')), 0]) #\n",
    "                        unmatched_patterns_count += 1 #\n",
    "\n",
    "                all_patterns = [all_patterns, temp_dataset] #\n",
    "                all_patterns = pd.concat(all_patterns, ignore_index=True) #\n",
    "            \n",
    "            selected_patterns = pd.DataFrame(selected_patterns)\n",
    "            selected_patterns = pd.DataFrame({'device':selected_patterns[0], 'date':pd.to_datetime(selected_patterns[1]), \n",
    "                                              'pattern':selected_patterns[2],'pattern_len':selected_patterns[3], \n",
    "                                              'frequency':selected_patterns[4]})\n",
    "\n",
    "            selected_patterns.to_csv(output_path + 'selected_patterns_' + date + '.csv', index=False)\n",
    "\n",
    "            if len(unmatched_patterns) > 0 :\n",
    "                unmatched_patterns = pd.DataFrame(unmatched_patterns)\n",
    "                unmatched_patterns = pd.DataFrame({'device':unmatched_patterns[0],'date':pd.to_datetime(unmatched_patterns[1]), \n",
    "                                                   'pattern':unmatched_patterns[2],'pattern_len':unmatched_patterns[3], \n",
    "                                                   'frequency':unmatched_patterns[4]})\n",
    "                unmatched_patterns.to_csv(output_path + 'unmatched_patterns' + date + '.csv', index=False)\n",
    "            \n",
    "            all_patterns.to_csv(output_path + 'frequent_patterns_' + date + '.csv', index=False)\n",
    "            stop_time = time.time()\n",
    "            print('Execution time: ' + repr(round((stop_time - start_time),0)) + ' sec')\n",
    "            print()\n",
    "\n",
    "\n",
    "\n",
    "source_output = os.listdir(output_path)\n",
    "selected_patterns = pd.DataFrame()\n",
    "frequent_patterns = pd.DataFrame()\n",
    "\n",
    "# Merging selected patterns\n",
    "for file in source_output:\n",
    "    if file.startswith('selected_patterns_' + sample_date) and file.endswith('.csv'):\n",
    "        print(file)\n",
    "        dataset = pd.read_csv(output_path + file)\n",
    "        selected_patterns = [selected_patterns, dataset]\n",
    "        selected_patterns = pd.concat(selected_patterns, ignore_index=True)\n",
    "selected_patterns.to_csv(output_path + 'selected_patterns_' + sample_date + '_.csv', index=False)\n",
    "\n",
    "# Merging all extracted patterns\n",
    "for file in source_output:\n",
    "    if file.startswith('frequent_patterns_' + sample_date) and file.endswith('.csv'):\n",
    "        print(file)\n",
    "        dataset = pd.read_csv(output_path + file)\n",
    "        frequent_patterns = [frequent_patterns, dataset]\n",
    "        frequent_patterns = pd.concat(frequent_patterns, ignore_index=True) \n",
    "frequent_patterns.to_csv(output_path + 'frequent_patterns_' + sample_date + '_.csv', index=False)\n",
    "\n",
    "\n",
    "# Calculating the frequency of each selected pattern\n",
    "selected_patterns = pd.read_csv(output_path + 'selected_patterns_' + sample_date + '_.csv', delimiter=',')\n",
    "i = 0\n",
    "mfsp_id = []\n",
    "mPattern_id = []\n",
    "mfsp_freq = []\n",
    "\n",
    "tmp_selected_patterns = selected_patterns[(selected_patterns['frequency'] >= 1) == True]\n",
    "total_freq = sum(tmp_selected_patterns['frequency'])\n",
    "print('Total number of frequent sequential patterns:', total_freq)\n",
    "\n",
    "for name, group in selected_patterns.groupby('pattern'):\n",
    "    if len(group['date'].unique()) >= 1 and len(name.split(',')) > 1:\n",
    "        if sum(group['frequency']) >= 1:\n",
    "            mPattern_id.append([name, sum(group['frequency'])])\n",
    "            mfsp_freq.append(sum(group['frequency']))\n",
    "            name = map(int, name.split(','))\n",
    "            mfsp_id.append(list(name))\n",
    "\n",
    "            i += 1\n",
    "print('Total number of unique frequent sequential patterns:',i)\n",
    "mPattern_id.sort(key=lambda tup: tup[1], reverse=True)\n",
    "print(mPattern_id)\n",
    "print()\n",
    "print(mfsp_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Levenshtein Distance (edit distance) algorithm source code\n",
    "# The code is adpoted from: https://www.geeksforgeeks.org/dynamic-programming-set-5-edit-distance/\n",
    "# Written by Bhavya Jain.\n",
    "def editDistDP(str1, str2):\n",
    "    \n",
    "    # Added by the \"Shahrooz Abghari\" for normalization purposes\n",
    "    ############################################################\n",
    "    m = len(str1)\n",
    "    n = len(str2)\n",
    "    if m < n:\n",
    "        m, n = n, m\n",
    "        str1, str2 = str2, str1\n",
    "    ############################################################\n",
    "    # Create a table to store results of subproblems\n",
    "    dp = [[0 for x in range(n+1)] for x in range(m+1)]\n",
    "    \n",
    "    # Fill d[][] in bottom up manner\n",
    "    for i in range(m+1):\n",
    "        for j in range(n+1):\n",
    " \n",
    "            # If first string is empty, only option is to\n",
    "            # isnert all characters of second string\n",
    "            if i == 0:\n",
    "                dp[i][j] = j    # Min. operations = j\n",
    "                \n",
    "            # If second string is empty, only option is to\n",
    "            # remove all characters of second string\n",
    "            elif j == 0:\n",
    "                dp[i][j] = i    # Min. operations = i\n",
    "                \n",
    "            # If last characters are same, ignore last char\n",
    "            # and recur for remaining string\n",
    "            elif str1[i-1] == str2[j-1]:\n",
    "                dp[i][j] = dp[i-1][j-1]\n",
    "                \n",
    "            # If last character are different, consider all\n",
    "            # possibilities and find minimum\n",
    "            else:\n",
    "                dp[i][j] = 1 + min(dp[i][j-1],        # Insert\n",
    "                                   dp[i-1][j],        # Remove\n",
    "                                   dp[i-1][j-1])    # Replace\n",
    "               \n",
    "    return float(dp[m][n])/m # normalize the result by dividing it with the length of the longest pattern"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def editDist_matrix(X, Y):\n",
    "    test = []\n",
    "    test = [[editDistDP(X[i], Y[j]) for j in range(len(Y))] for i in range(len(X))]\n",
    "    a = pd.DataFrame(test)\n",
    "    return a\n",
    "\n",
    "# Calculating the similarity between patterns\n",
    "start_time = time.time()\n",
    "print (\"LD is started!\")\n",
    "mfsp_id_matrix_editDist = editDist_matrix(mfsp_id, mfsp_id)\n",
    "print('Execution time: ' + repr(round((time.time() - start_time),0)) + ' sec')\n",
    "\n",
    "mfsp_id_matrix_editDist.to_csv(output_path+'sample_1_s_matrix')\n",
    "mfsp_distance_matrices = [mfsp_id_matrix_editDist]\n",
    "\n",
    "# Clustering the patterns, using AffinityPropagation \n",
    "i = 0\n",
    "distance_matrices = [mfsp_id_matrix_editDist]\n",
    "distances = ['LD']\n",
    "af_labels = []\n",
    "af_n_clusters_centroid = []\n",
    "af_n_clusters = []\n",
    "af_silhouette_avg = []\n",
    "\n",
    "for distance_matrix in distance_matrices:\n",
    "    af = AffinityPropagation().fit(distance_matrix)\n",
    "    cluster_centers_indices = af.cluster_centers_indices_\n",
    "    af_labels.append(af.labels_)\n",
    "    af_n_clusters_centroid.append(cluster_centers_indices)\n",
    "    af_n_clusters.append(len(cluster_centers_indices))\n",
    "    af_silhouette_avg.append(silhouette_score(distance_matrix, af_labels[i], metric='euclidean'))\n",
    "    \n",
    "    print('---------', distances[i],'---------')\n",
    "    print('Estimated number of clusters: %d' % af_n_clusters[i])\n",
    "    print(\"Silhouette Coefficient: %f\" % af_silhouette_avg[i])\n",
    "    i +=1\n",
    "\n",
    "# Calculating the similarity between exemplars\n",
    "af_centroid_patterns = []\n",
    "\n",
    "for distance in range(len(distances)):\n",
    "    temp = []\n",
    "    for item in af_n_clusters_centroid[distance]:\n",
    "        temp.append(mfsp_id[item])\n",
    "    af_centroid_patterns.append(temp)\n",
    "print(af_centroid_patterns)\n",
    "\n",
    "\n",
    "for i in range(len(distances)):\n",
    "    print('---------', distances[i],'---------')\n",
    "    start_time = time.time()\n",
    "    print (\"LD is started!\")\n",
    "    centroids_matrix_editDist = editDist_matrix(af_centroid_patterns[i], af_centroid_patterns[i])\n",
    "    print('Execution time: ' + repr(round((time.time() - start_time),0)) + ' sec')\n",
    "    break\n",
    "\n",
    "# Building Minimum Spanning Tree\n",
    "G = nx.Graph()\n",
    "G.population={}\n",
    "\n",
    "weighted_edges = []\n",
    "for i in range(len(centroids_matrix_editDist)):\n",
    "    for j in range(len(centroids_matrix_editDist)):\n",
    "        weighted_edges.append((i,j,centroids_matrix_editDist[i][j]))\n",
    "        \n",
    "for i in range (af_n_clusters[0]):\n",
    "    freq_ = 0\n",
    "    for k, v in zip(af_labels[0], mfsp_freq):\n",
    "        if k == i:\n",
    "            freq_ += v\n",
    "    G.population[i] = freq_\n",
    "\n",
    "G.add_nodes_from(range(len(centroids_matrix_editDist)))\n",
    "G.add_weighted_edges_from(weighted_edges)\n",
    "\n",
    "mst = nx.minimum_spanning_tree(G)\n",
    "mst_ = mst\n",
    "pos = nx.layout.kamada_kawai_layout(mst_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda/lib/python3.6/site-packages/networkx/drawing/nx_pylab.py:611: MatplotlibDeprecationWarning: isinstance(..., numbers.Number)\n",
      "  if cb.is_numlike(alpha):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       edge  weight\n",
      "4    (0, 9)     1.0\n",
      "5  (0, 107)     1.0\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the MST before and after cutting the longest edge\n",
    "fig, ax = plt.subplots(figsize=(10, 10))\n",
    "nx.draw(mst_, pos, with_labels=False, font_size = 8,\n",
    "        node_size=[G.population[v]/5 for v in G],\n",
    "        node_color = [float(mst_.degree(v)) for v in mst_])\n",
    "plt.savefig('tree_1.pdf', format='pdf', dpi=300)\n",
    "plt.show()\n",
    "\n",
    "removed_edge = []\n",
    "mst_edge_weight = []\n",
    "\n",
    "for item in mst_.edges(data=True):\n",
    "    mst_edge_weight.append([(item[0], item[1]), item[2]['weight']])\n",
    "\n",
    "mst_edge_weight = pd.DataFrame(mst_edge_weight)\n",
    "mst_edge_weight = pd.DataFrame({'edge':mst_edge_weight[0], 'weight':mst_edge_weight[1]})\n",
    "\n",
    "for name, group  in mst_edge_weight.groupby('weight'):\n",
    "    if name == mst_edge_weight['weight'].max():\n",
    "        print(group)\n",
    "        for item in group['edge']:\n",
    "            removed_edge.append(item[0])\n",
    "            removed_edge.append(item[1])\n",
    "            mst_.remove_edge(item[0],item[1])\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(10, 10))\n",
    "nx.draw(mst_, pos, with_labels=False, font_size = 8,\n",
    "        node_size=[G.population[v]/5 for v in G],\n",
    "        node_color = [float(mst_.degree(v)) for v in mst_])\n",
    "plt.savefig('tree_2.pdf', format='pdf', dpi=300)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "{9} 2473\n",
      "\n",
      "{107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126} 1514\n",
      "\n",
      "{0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183} 28050\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Output each sub-trees nodes and their total number of patterns\n",
    "cluster_area = []\n",
    "\n",
    "for i in range (af_n_clusters[0]):\n",
    "    freq_ = 0\n",
    "    for k, v in zip(af_labels[0], mfsp_freq):\n",
    "        if k == i:\n",
    "            freq_ += v   \n",
    "    cluster_area.append(freq_/100)\n",
    "\n",
    "a = set()\n",
    "b=[]\n",
    "\n",
    "for i in range(len(centroids_matrix_editDist)):\n",
    "    if len(list(mst_.neighbors(i))) == 0:\n",
    "         b.append({i})\n",
    "    else:\n",
    "        a.add(i)\n",
    "        for j in mst_.neighbors(i):\n",
    "            a.add(j)\n",
    "            for k in mst_.neighbors(j):\n",
    "                a.add(k)\n",
    "        if a not in b:\n",
    "            b.append(a)\n",
    "        a=set()\n",
    "# print(b)\n",
    "print()\n",
    "\n",
    "c = set()\n",
    "d = []\n",
    "for i in range(len(b)):\n",
    "    for j in range(len(b)):\n",
    "        if len(b[i]&b[j]) > 0:\n",
    "            c = c.union(b[i])\n",
    "            c = c.union(b[j])\n",
    "    if len(d) > 0:\n",
    "        for item in d:\n",
    "            flag = False\n",
    "            if len(c&item) > 0:\n",
    "                flag = True\n",
    "                d.append(c.union(item))\n",
    "                d.remove(item)\n",
    "        if flag == False:\n",
    "            d.append(c)\n",
    "    else:\n",
    "        d.append(c)\n",
    "    c = set()\n",
    "\n",
    "for item in d: \n",
    "    a=0\n",
    "    for i in item:\n",
    "        a+=int(cluster_area[i]*100)\n",
    "    print(item, a)\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting the results and showing the outliers (in red) using PCA\n",
    "%matplotlib inline\n",
    "\n",
    "pca_mfsp = PCA(n_components=2).fit(mfsp_id_matrix_editDist)\n",
    "pca_mfsp_2d = pd.DataFrame(pca_mfsp.transform(mfsp_id_matrix_editDist))\n",
    "pca_mfsp_2d = pd.DataFrame({'x':pca_mfsp_2d[0],'y':pca_mfsp_2d[1]})\n",
    "pca_mfsp__ = pca_mfsp.transform(mfsp_id_matrix_editDist)\n",
    "\n",
    "mfsp_area = [((n)) for n in mfsp_freq]\n",
    "\n",
    "label = pd.DataFrame({'label': af_labels[0]})\n",
    "area = pd.DataFrame({'area': mfsp_area})\n",
    "frame = pd.concat([pca_mfsp_2d, label, area], axis=1)\n",
    "\n",
    "df_ = pd.DataFrame()\n",
    "temp_ = pd.DataFrame()\n",
    "\n",
    "# Choose the clusters of the smallest sub-trees (this need to be done manually)\n",
    "for i in [9,107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126]:\n",
    "    temp_ = frame.loc[frame['label'] == i]\n",
    "    df_ = [df_, temp_]\n",
    "    df_ = pd.concat(df_, ignore_index=False)\n",
    "\n",
    "df__ = frame[~frame.label.isin(df_.label)]    \n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "frame.plot(kind='scatter', x='x', y='y', ax=ax, c=af_labels[0], s=mfsp_area, edgecolor='black')\n",
    "plt.savefig('AP_LD_Feb_2018_.pdf', format='pdf', dpi=300)\n",
    "\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "frame.plot(kind='scatter', x='x', y='y', ax=ax, c=af_labels[0], s=mfsp_area, edgecolor='black')\n",
    "df_.plot(kind='scatter', x='x', y='y', ax=ax, c='red', s=df_.area, alpha=1)\n",
    "\n",
    "ax.set_xlabel(\"\")\n",
    "ax.set_ylabel(\"\")\n",
    "ax.set_facecolor(\"white\")\n",
    "ax.spines['bottom'].set_color('0.5')\n",
    "ax.spines['top'].set_color('0.5')\n",
    "ax.spines['right'].set_color('0.5')\n",
    "ax.spines['left'].set_color('0.5')\n",
    "\n",
    "plt.savefig('AP_LD_Feb_2018.pdf', format='pdf', dpi=300)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Extracting the unexpected patterns from each cluster\n",
    "unexpected_pattern=[]\n",
    "for k, v in zip(frame.label, mfsp_id):\n",
    "    if k in [9, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126]:\n",
    "        v_ =[]\n",
    "        for item in v:\n",
    "            v_.append(str(item))\n",
    "        unexpected_pattern.append([','.join(v_),k])\n",
    "len(unexpected_pattern)\n",
    "\n",
    "# Output detected outliers\n",
    "temp_ = []\n",
    "anomaly = pd.DataFrame()\n",
    "unexpected_pattern_index = []\n",
    "anomaly_freq = []\n",
    "\n",
    "k = 0\n",
    "distances = ['LD']\n",
    "clustering_alg = ['Affinity Propagation']\n",
    "n_clusters_ = [af_n_clusters]\n",
    "clusters_label = [af_labels]\n",
    "\n",
    "for j in range(1):\n",
    "    for i in range(len(distances)):\n",
    "        print('##############################################################################')\n",
    "        print('Clustering Algorithm: ', clustering_alg[j])\n",
    "        print('Distance measure: ', distances[i])\n",
    "#         print('Average Silhouette scoure for the clustering solution: ', silhouette_avg_[j][i])\n",
    "        print('##############################################################################')\n",
    "        print()\n",
    "        \n",
    "        all_patterns = pd.read_csv(output_path + 'frequent_patterns_2017_05.csv')\n",
    "\n",
    "        anomaly = pd.DataFrame()\n",
    "        count = n_clusters_[j][i]\n",
    "        pattern_index = []\n",
    "        \n",
    "        print(count)\n",
    "        anomaly_freq = []\n",
    "        \n",
    "        unexpected_pattern_ = pd.DataFrame(unexpected_pattern)\n",
    "        unexpected_pattern_[0].str.len().sort_values().index\n",
    "        unexpected_pattern_ = unexpected_pattern_.reindex(unexpected_pattern_[0].str.len().sort_values(ascending=False).index)\n",
    "\n",
    "        for row, un_pattern in unexpected_pattern_.groupby([0], sort=False):\n",
    "            print(row)\n",
    "            temp_ = all_patterns\n",
    "            temp_['pattern_'] = np.where(temp_['pattern'].str.contains(row), row, '+')\n",
    "            if len(temp_[temp_['pattern_'] != '+']) > 0:\n",
    "                temp_ = temp_[temp_['pattern_'] != '+']\n",
    "                anomaly = [anomaly, temp_]\n",
    "                anomaly = pd.concat(anomaly, ignore_index=True)\n",
    "                all_patterns = all_patterns[all_patterns['pattern_'].str.contains(row) == False]\n",
    "\n",
    "\n",
    "print(len(anomaly))\n",
    "anomaly.to_csv(output_path + 'outlier_2017_05_.csv', index=False)\n",
    "\n",
    "# Plotting detected outliers for each device \n",
    "pivot_anomaly=anomaly.pivot_table(index='device_id', aggfunc={'date':'count'})\n",
    "pivot_anomaly.to_csv(output_path+'pivot_anomaly_1.csv')\n",
    "pivot_anomaly.plot.bar(color=['g'], figsize=(6,4))\n",
    "plt.ylabel('No. of days')\n",
    "plt.xlabel('Device id')\n",
    "plt.legend().set_visible(False)\n",
    "plt.savefig(output_path + 'devices_with_issue.pdf', format ='pdf', dpi=300, bbox_inches='tight')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
